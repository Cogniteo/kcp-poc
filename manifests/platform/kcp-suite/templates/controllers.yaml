{{- /* Loop over each controller in values.controllers */ -}}
{{- range .Values.controllers }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .name | quote }}
  namespace: argocd
spec:
  project: default
  source:
    repoURL: {{ .repoURL | quote }}
    targetRevision: {{ .targetRevision | quote }}
    path: {{ .path | quote }}
    kustomize:
      namespace: {{ .destinationNamespace | quote }}
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .destinationNamespace | quote }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .name }}-client-cert
  namespace: {{ .destinationNamespace | quote }} 
spec:
  commonName: {{ .name }}-cert
  issuerRef:
    name: kcp-front-proxy-client-issuer
  privateKey:
    algorithm: RSA
    size: 2048
  secretName: {{ .name }}-client-cert
  subject:
    organizations:
      - system:kcp:admin
  usages:
    - client auth
{{- if .managedPolicies }}
---
apiVersion: eks.aws.amazon.com/v1alpha1
kind: IAMRole
metadata:
  name: {{ .name }}
spec:
  assumeRolePolicyDocument: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Principal": {
            "Service": "pods.eks.amazonaws.com"
          },
          "Action": "sts:AssumeRole"
        }
      ]
    }
  description: "IAM Role for the {{ .name }} controller"
  managedPolicies:
    {{- range .managedPolicies }}
    - {{ . }}
    {{- end }}
  tags:
    - key: Name
      value: "{{ .name }}"
    - key: Controller
      value: {{ .name | quote }}
---
apiVersion: eks.amazonaws.com/v1alpha1
kind: PodIdentityAssociation
metadata:
  name: {{ .name }}
  namespace: {{ .destinationNamespace | quote }}
spec:
  serviceAccountName: {{ .serviceAccountName | default (printf "%s-controller" .name) | quote }}
  roleRef:
    name: {{ .name }}
    kind: IAMRole
{{- end }}
{{- end }}